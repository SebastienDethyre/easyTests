#!/bin/bash

. venv omdt

# Variables

T="Test"
B="Test sans affichage"
TN="Test No Init"
BN="Test No Init sans affichage"

RT="Lancer le test"
AC="Fermeture Auto"
NO="Notifications"

current_directory=`pwd`
end_of_directory=${current_directory: -5}
sed -i '1s/.*/# Easy tests configuration/' ~/bin/easyTests/config
check_auto_close=$(sed -n '2p' ~/bin/easyTests/config)
check_notifications_show=$(sed -n '3p' ~/bin/easyTests/config)

auto_close_image="♻"
auto_close_image="🌀"
auto_close_image="🔜"
auto_close_image="🔄"

notifications_show_image="🔔"

check_current_test(){
	filename=~/bin/easyTests/currentTest

	n=1
	while read line; do
		line_ending=${line: -8}
		line_begin=${line:0:21}
		if [ "$line_begin" = "om-tests -c runone -t" ]; then
			choosen_test=`echo $line | cut -c 23-`
			type_test="Simple"
		else
			choosen_test=`echo $line | cut -c 72-`
			type_test="Sans affichage"
		fi
		if [ "$line_ending" = "--noinit" ]; then
			no_init="No Init"
			choosen_test=${choosen_test::-9}
			type_test="$type_test $no_init" 
		fi
		n=$((n+1))
	done < $filename
}

check_current_test

logo="
\t<span color=\"#286b6a\">████████ ███████ ███████ ████████</span>
\t<span color=\"#338887\">        ██        ██              ██                    ██</span>
\t<span color=\"#389493\">        ██        █████      ███████        ██</span>
\t<span color=\"#3fa6a5\">        ██        ██                          ██        ██</span>
\t<span color=\"#45b5b4\">        ██        ██                          ██        ██</span>
\t<span color=\"#4cc7c6\">        ██        ███████ ███████        ██</span>
"

check_auto_close_icon(){
	if [ "$check_auto_close" = "auto-close: true" ];then
		auto_close_icon="$auto_close_image"
	else
		auto_close_icon=""
	fi
}

check_notifications_show_icon(){
	if [ "$check_notifications_show" = "notifications-show: true" ];then
		notifications_show_icon="$notifications_show_image"
	else
		notifications_show_icon=""
	fi
}

header_general(){
	check_auto_close_icon
	check_notifications_show_icon
	choosen_test_short=${choosen_test:: -6}
	choosen_test_short=`echo "$choosen_test_short"  | cut -c5-| sed -r 's/_/ /g' | fold -b$((30)) -s`
	choosen_test_short=`echo "$choosen_test_short"| sed -r 's/_/ /g' `
	choosen_test_number=${choosen_test:0:3}
	COLUMNS=30
	choosen_test_text=`echo "$choosen_test_short" | fold -s -w $(( $COLUMNS - 4 )) | sed -e '2,$s/^/\t\t\t  /g'`
	HEADER="$logo\n\n
\t<big>🧪</big>\t<span color=\"grey\">Nom :</span><span color=\"grey\"><big><b><i> $choosen_test_number</i></b></big></span> <span color=\"#3fa6a5\"><big><b><i> $choosen_test_text</i></b></big></span>\n
\t<big></big>\t<span color=\"grey\">Type :</span><span color=\"#45b5b4\"><b><i> $type_test</i></b></span>
\t\t\t\t\t\t\t\t\t\t       $auto_close_icon
\t\t\t\t\t\t\t\t\t\t       $notifications_show_icon"
}

_quit(){
    exit 0
}

parse_file_list(){
	filename=$1
	n=1
	while read line; do
		line_ending=${line: -6}
		
		if [ "$line_ending" != ".robot" ]; then
			sed -n -i '/.robot/p' $filename
		fi
		n=$((n+1))
	done < $filename
	p=1
	while read line; do
		sed -i -e 's/.robot//g' $filename
		tests_count=$((tests_count+1))
		p=$((p+1))
	done < $filename
}

fill_tests_list(){
	ls > ~/bin/easyTests/testsList
	parse_file_list ~/bin/easyTests/testsList
}

notification(){
	zenity --notification\
    --window-icon="info" \
    --text="$1"
}

clear_screen(){	
	clear 
}

run_test(){
	if ([ -n "$choosen_test" ]); then
		~/bin/easyTests/./currentTest
	else 
		echo "Pas de test choisi"
	fi
}

toggle_auto_close(){
	if [ "$check_auto_close" = "auto-close: true" ]; then
		sed -i '2s/.*/auto-close: false/' ~/bin/easyTests/config
		check_auto_close=$(sed -n '2p' ~/bin/easyTests/config)
		auto_close_icon=""
	else
		sed -i '2s/.*/auto-close: true/' ~/bin/easyTests/config
		check_auto_close=$(sed -n '2p' ~/bin/easyTests/config)
		auto_close_icon="$auto_close_image"	
	fi
}

toggle_notifications_show(){
	if [ "$check_notifications_show" = "notifications-show: true" ]; then
		sed -i '3s/.*/notifications-show: false/' ~/bin/easyTests/config
		check_notifications_show=$(sed -n '3p' ~/bin/easyTests/config)
		notifications_show_icon=""
	else
		sed -i '3s/.*/notifications-show: true/' ~/bin/easyTests/config
		check_notifications_show=$(sed -n '3p' ~/bin/easyTests/config)
		notifications_show_icon="$notifications_show_image"	
	fi
}
# toggle_notifications_show(){

# }

# General functions

test_alias(){
	if [ -e ~/bin/easytests/config/currentCommits/$HASH_COMMIT/isCommitPending ]; then
		echo "Commit en cours"
		notification "Commit en cours 🔏"
	else
		if file=`zenity --list  --width=400 --height=1080 --ok-label="✅" --cancel-label="❎" --title="Tests  🧪" --text="     $tests_count tests disponibles" --column="🧫" $(sed ':z;N;$! bz;s/\n/ /g' ~/bin/easyTests/testsList)`;	then
			titre=$file
			if [ "$titre" = "" ]; then
				echo "Pas de test choisi"
			fi
		else
			echo "Annulation"
		fi
		if ([ -n "$titre" ]); then
			if [ "$1" = "T" ]; then
				echo "om-tests -c runone -t $titre.robot" > ~/bin/easyTests/currentTest
				type_test="Simple"
				echo "$check_being_in_tests"
			elif [ "$1" = "B" ]; then
				echo "xvfb-run -a --server-args=-screen\ 0\ 1680x1050x24 om-tests -c runone -t $titre.robot" > ~/bin/easyTests/currentTest
				type_test="Sans affichage"
			elif [ "$1" = "TN" ]; then
				echo "om-tests -c runone -t $titre.robot --noinit" > ~/bin/easyTests/currentTest
				type_test="Simple No Init"
			elif [ "$1" = "BN" ]; then
				echo "xvfb-run -a --server-args=-screen\ 0\ 1680x1050x24 om-tests -c runone -t $titre.robot --noinit" > ~/bin/easyTests/currentTest
				type_test="Sans affichage No Init"
			fi
			choosen_test="$titre.robot"
			echo -e "\nAlias défini pour :\n\n$titre\n$type_test\n"
			if [ "$check_notifications_show" = "notifications-show: true" ]; then
				notification "$titre\n$type_test"
			fi
			unset titre
			if [ "$check_auto_close" = "auto-close: true" ]; then
				_quit
			fi
		else
			echo "Pas de test choisi"
		fi
		2>/dev/null
	fi
}

# Dialog

frm_tests(){
	header_general
	zenity --list --width=400 --height=580 --text='<span font-family=\"Arial\">'"$HEADER"'</span>' \
    	--title="Tests" \
    	--ok-label="✅" \
    	--cancel-label="❎" \
    	--hide-column 1 --column "" --column "" --column "" --column "" --column "" \
    	1 "  1" "				             $T" "	       " "📺" \
    	2 "  2" "		   	     $B" "	       " "📻" \
    	3 "  3" "				     $TN" "		    " "🗃" \
    	4 "  4" "		    $BN" "	    " "📑" \
    	0 "" "" "" "" \
    	5 "  5" "				   $RT" "		    " "🔬" \
    	6 "  6" "		    	        $AC" "	    " "$auto_close_image" \
    	7 "  7" "		    	           $NO" "	    " "$notifications_show_image" 2>/dev/null;
}

frm_tests_parser(){
    case $1 in
        1) test_alias "T";;
        2) test_alias "B" ;;
		3) test_alias "TN" ;;
		4) test_alias "BN" ;;
		5) run_test ;;
		6) toggle_auto_close ;;
		7) toggle_notifications_show ;;
        *)
           quit="1"
           _quit ;;
    esac
}

function_tests(){
	menuchoice=$(frm_tests)
	frm_tests_parser ${menuchoice%|*}
	if [ $quit!="1" ]; then
		function_tests
	fi
}

# Main

if [ $end_of_directory = "tests" ]; then
	fill_tests_list
	function_tests
else
	echo "Vous nêtes pas dans un respertoire de tests"
	notification "Vous nêtes pas dans un respertoire de tests"
fi

exit 0
